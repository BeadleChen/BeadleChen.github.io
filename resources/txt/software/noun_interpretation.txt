
<label>1. 容器</label></br>
<p>
　　容器是一种服务调用规范框架，J2EE 大量运用了容器和组件技术来构建分层的企业级应用。</br>
在 J2EE 规范中，相应的有 WEB Container 和 EJB Container 等。</br>
　　WEB 容器给处于其中的应用程序组件（JSP，SERVLET）提供一个环境，使 JSP，SERVLET 直接</br>
跟容器中的环境变量交互，不必关注其它系统问题。</br>
　　web 容器主要由 WEB 服务器来实现。例如：TOMCAT，WEBLOGIC，WEBSPHERE 等。</br>
若容器提供的接口严格遵守 J2EE 规范中的 WEB APPLICATION 标准。我们把该容器叫做 J2EE 中的 WEB 容器。</br>
　　WEB 容器更多的是跟基于 HTTP 的请求打交道。而 EJB 容器不是。它是更多的跟数据库、其它服务打交道。</br>
容器的行为是 将其内部的应用程序组件与外界的通信协议交互进行了隔离，从而减轻内部应用程序组件的负担</br>
（实现方面的负担？）。例如，SERVLET 不用关心 HTTP 的细节，而是直接引用环境变量 session、request、</br>
response 就行、EJB 不用关心数据库连接速度、各种事务控制，直接由容器来完成。</br>
　　EJB容器：Enterprise java bean 容器。更具有行业领域特色。他提供给运行在其中的组件EJB各种管理功能。</br>
只要满足J2EE规范的EJB放入该容器，马上就会被容器进行高效率的管理。并且可以通过现成的接口来获得系统级别的服务。</br>
例如邮件服务、事务管理。WEB容器和EJB容器在原理上是大体相同的，更多的区别是被隔离的外界环境。WEB容器更多的是</br>
跟基于HTTP的请求打交道。而EJB容器不是。它是更多的跟数据库、其它服务打交道。但他们都是把与外界的交互实现从而</br>
减轻应用程序的负担。例如SERVLET不用关心HTTP的细节，直接引用环境变量session,request,response就行、EJB不用</br>
关心数据库连接速度、各种事务控制，直接由容器来完成。</br>
</p>

<label>2. 组件</label></br>
<p>
组件(component):</br>
　　组件也是抽象的概念,可以理解为一些符合某种规范的类组合在一起就构成了组件。他可以提供某些特定的功能。</br>
J2EE来说，有什么servlet，jsp, javabean，ejb都是组件。但实际他们都是类，只不过有他们特殊的规定。</br>

</p>


<label>3. Web服务器</label></br>
<p>
　　Web 服务器（Web Server）可以处理 HTTP 协议。当 Web 服务器接收到一个 HTTP 请求，会返回一个 HTTP 响应，</br>
例如送回一个 HTML 页面。</br>
　　Web 服务器可以响应针对静态页面或图片的请求， 进行页面跳转（redirect），或者把动态响应（dynamic response）</br>
的产生委托（delegate）给一些其它的程序，例如 CGI 脚本，JSP（JavaServer Pages）脚本，servlets，ASP</br>
（Active Server Pages）脚本，服务器端 JavaScript，或者一些其它的服务器端技术。</br>
Web 服务器仅仅提供一个可以执行服务器端程序和返回(程序所产生的)响应的环境，而不会超出职能范围。</br>
</p>



